<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on PypTech Chronicles</title>
        <link>http://localhost:1313/posts/</link>
        <description>Recent content in Posts on PypTech Chronicles</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>fr-fr</language>
        <lastBuildDate>Wed, 02 Oct 2024 15:58:38 +0200</lastBuildDate><atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Les commandes de base sous Linux : Ce qui se passe sous le capot</title>
        <link>http://localhost:1313/posts/les-commandes-de-base-sous-linux-ce-qui-se-passe-sous-le-capot/</link>
        <pubDate>Wed, 02 Oct 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/posts/les-commandes-de-base-sous-linux-ce-qui-se-passe-sous-le-capot/</guid>
        <description>&lt;h1 id=&#34;les-commandes-de-base-sous-linux--ce-qui-se-passe-sous-le-capot&#34;&gt;Les commandes de base sous Linux : Ce qui se passe sous le capot
&lt;/h1&gt;&lt;p&gt;Bienvenue dans cette chronique spécialement dédiée aux futurs experts en systèmes et réseaux, notamment les courageux étudiants en &lt;strong&gt;TSSR&lt;/strong&gt;. Si vous commencez tout juste à vous familiariser avec l&amp;rsquo;univers mystérieux et parfois intimidant de la ligne de commande (oui, ce fameux écran noir qui vous fixe), ne vous inquiétez pas, on est tous passés par là.&lt;/p&gt;
&lt;h3 id=&#34;la-ligne-de-commande--toute-noire-et-un-peu-flippante-&#34;&gt;La ligne de commande ? Toute noire et un peu flippante ?
&lt;/h3&gt;&lt;p&gt;Pas de panique ! Ici, on dédramatise ! La ligne de commande, c&amp;rsquo;est comme un vélo : une fois que vous avez appris à pédaler, vous n&amp;rsquo;avez plus peur de tomber. On va explorer ensemble ce qui se cache derrière des commandes comme &lt;code&gt;ls&lt;/code&gt;, &lt;code&gt;cd&lt;/code&gt;, ou &lt;code&gt;rm&lt;/code&gt; et je vous promets que ça ne mord pas. Allez, accrochez-vous, c&amp;rsquo;est parti pour une aventure (sans danger) dans les tréfonds de Linux ! Et rappelez-vous : &lt;strong&gt;personne n&amp;rsquo;a jamais été mangé par un shell&lt;/strong&gt;&amp;hellip; enfin, presque.&lt;/p&gt;
&lt;h2 id=&#34;1-la-commande-cd&#34;&gt;1. La commande &lt;code&gt;cd&lt;/code&gt;
&lt;/h2&gt;&lt;p&gt;La commande &lt;code&gt;cd&lt;/code&gt; (change directory) permet de naviguer dans les répertoires du système de fichiers.&lt;/p&gt;
&lt;h3 id=&#34;ce-que-fait-réellement-la-commande-cd-&#34;&gt;Ce que fait réellement la commande &lt;code&gt;cd&lt;/code&gt; :
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Changer de répertoire&lt;/strong&gt; : &lt;code&gt;cd&lt;/code&gt; permet de naviguer d&amp;rsquo;un répertoire à un autre, mais contrairement à un clic sur une icône dans une interface graphique, ici c&amp;rsquo;est le &lt;strong&gt;shell&lt;/strong&gt; (bash, zsh) qui modifie son répertoire de travail. Il appelle une fonction du noyau appelée &lt;code&gt;chdir()&lt;/code&gt; pour définir un nouveau répertoire comme répertoire courant.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Impact sur les processus&lt;/strong&gt; : Cela signifie que toutes les commandes exécutées ensuite vont opérer depuis ce nouveau répertoire, jusqu&amp;rsquo;à ce que vous changiez à nouveau de répertoire.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Voici une explication visuelle détaillée de la commande &lt;code&gt;cd&lt;/code&gt; via ExplainShell :&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/explication-cd.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Explication de la commande cd&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Crédit image :&lt;/em&gt; &lt;a class=&#34;link&#34; href=&#34;https://explainshell.com/explain?cmd=cd&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ExplainShell&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;exemple-dutilisation-de-cd-&#34;&gt;Exemple d&amp;rsquo;utilisation de &lt;code&gt;cd&lt;/code&gt; :
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Se déplacer dans le répertoire &amp;#34;Documents&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd Documents
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Revenir au répertoire parent&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd ..
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Aller directement dans le répertoire personnel&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd ~
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Revenir au répertoire précédent&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd -
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2-la-commande-ls&#34;&gt;2. La commande &lt;code&gt;ls&lt;/code&gt;
&lt;/h2&gt;&lt;p&gt;La commande &lt;code&gt;ls&lt;/code&gt; permet d&amp;rsquo;afficher le contenu d&amp;rsquo;un répertoire.&lt;/p&gt;
&lt;h3 id=&#34;ce-que-fait-réellement-la-commande-ls-&#34;&gt;Ce que fait réellement la commande &lt;code&gt;ls&lt;/code&gt; :
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Lire le contenu du répertoire&lt;/strong&gt; : Lorsque vous exécutez &lt;code&gt;ls&lt;/code&gt;, le shell envoie une requête au système de fichiers en utilisant l&amp;rsquo;appel système &lt;code&gt;readdir()&lt;/code&gt; pour lister les fichiers et répertoires. En réalité, chaque fichier ou répertoire est stocké avec un certain nombre de métadonnées (permissions, tailles, dates) que le système va également récupérer si nécessaire.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Formatage des résultats&lt;/strong&gt; : Le résultat est ensuite formaté pour être affiché dans le terminal. Si vous utilisez des options comme &lt;code&gt;ls -l&lt;/code&gt;, le shell appelle aussi d&amp;rsquo;autres fonctions comme &lt;code&gt;stat()&lt;/code&gt; pour récupérer les permissions et la taille des fichiers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Voici un exemple de l&amp;rsquo;utilisation de la commande &lt;code&gt;ls&lt;/code&gt; dans un terminal :&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/explication-ls.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Explication de la commande ls&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Crédit image :&lt;/em&gt; &lt;a class=&#34;link&#34; href=&#34;https://explainshell.com/explain?cmd=ls&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ExplainShell&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;variante--ls--l&#34;&gt;Variante : &lt;code&gt;ls -l&lt;/code&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Affichage détaillé&lt;/strong&gt; : L&amp;rsquo;option &lt;code&gt;-l&lt;/code&gt; indique au shell de récupérer et d&amp;rsquo;afficher des informations supplémentaires sur chaque fichier, comme les permissions, le propriétaire, le groupe, la taille, et la date de modification. Ces informations sont récupérées via l&amp;rsquo;appel système &lt;code&gt;stat()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/explication-ls-l.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Explication de la commande ls -l&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Crédit image :&lt;/em&gt; &lt;a class=&#34;link&#34; href=&#34;https://explainshell.com/explain?cmd=ls&amp;#43;%2Dl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ExplainShell&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;variante--ls--la&#34;&gt;Variante : &lt;code&gt;ls -la&lt;/code&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Afficher les fichiers cachés&lt;/strong&gt; : L&amp;rsquo;option &lt;code&gt;-a&lt;/code&gt; permet d&amp;rsquo;afficher tous les fichiers, y compris ceux qui sont cachés (fichiers dont le nom commence par un point). Sous le capot, &lt;code&gt;ls&lt;/code&gt; utilise encore &lt;code&gt;readdir()&lt;/code&gt; mais sans exclure ces fichiers masqués par défaut.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/explication-ls-la.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Explication de la commande ls -la&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Crédit image :&lt;/em&gt; &lt;a class=&#34;link&#34; href=&#34;https://explainshell.com/explain?cmd=ls&amp;#43;%2Dla&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ExplainShell&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;exemple-dutilisation-de-ls-&#34;&gt;Exemple d&amp;rsquo;utilisation de &lt;code&gt;ls&lt;/code&gt; :
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Lister les fichiers du répertoire courant&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Lister les fichiers avec plus de détails&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls -l
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Lister tous les fichiers, y compris les fichiers cachés&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls -la
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Lister les fichiers d&amp;#39;un répertoire spécifique&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls /home/utilisateur/Documents
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3-la-commande-touch&#34;&gt;3. La commande &lt;code&gt;touch&lt;/code&gt;
&lt;/h2&gt;&lt;p&gt;La commande &lt;code&gt;touch&lt;/code&gt; permet de créer un fichier vide ou de mettre à jour la date de modification d&amp;rsquo;un fichier existant.&lt;/p&gt;
&lt;h3 id=&#34;ce-que-fait-réellement-la-commande-touch-&#34;&gt;Ce que fait réellement la commande &lt;code&gt;touch&lt;/code&gt; :
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Créer un fichier vide&lt;/strong&gt; : Si le fichier n&amp;rsquo;existe pas, &lt;code&gt;touch&lt;/code&gt; crée un fichier vide en appelant &lt;code&gt;open()&lt;/code&gt; avec une option pour créer le fichier s&amp;rsquo;il est absent. Le fichier n&amp;rsquo;a pas de contenu, mais il est bien présent dans le répertoire.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mettre à jour les métadonnées&lt;/strong&gt; : Si le fichier existe déjà, &lt;code&gt;touch&lt;/code&gt; met simplement à jour son horodatage (date de dernière modification) avec les appels système &lt;code&gt;utime()&lt;/code&gt; ou &lt;code&gt;futimens()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Voici l&amp;rsquo;explication de la commande &lt;code&gt;touch&lt;/code&gt; via ExplainShell :&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/explication-touch.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Explication de la commande touch&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Crédit image :&lt;/em&gt; &lt;a class=&#34;link&#34; href=&#34;https://explainshell.com/explain?cmd=touch&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ExplainShell&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;exemple-dutilisation-de-touch-&#34;&gt;Exemple d&amp;rsquo;utilisation de &lt;code&gt;touch&lt;/code&gt; :
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Créer un nouveau fichier vide&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;touch nouveau_fichier.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Mettre à jour la date de modification d&amp;#39;un fichier existant&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;touch fichier_existant.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Créer plusieurs fichiers à la fois&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;touch fichier1.txt fichier2.txt fichier3.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;4-la-commande-cat&#34;&gt;4. La commande &lt;code&gt;cat&lt;/code&gt;
&lt;/h2&gt;&lt;p&gt;La commande &lt;code&gt;cat&lt;/code&gt; (concatenate) permet de visualiser le contenu d&amp;rsquo;un fichier.&lt;/p&gt;
&lt;h3 id=&#34;ce-que-fait-réellement-la-commande-cat-&#34;&gt;Ce que fait réellement la commande &lt;code&gt;cat&lt;/code&gt; :
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Afficher le contenu d&amp;rsquo;un fichier&lt;/strong&gt; : Lorsque vous exécutez &lt;code&gt;cat&lt;/code&gt;, le fichier est ouvert avec &lt;code&gt;open()&lt;/code&gt;, lu avec &lt;code&gt;read()&lt;/code&gt;, puis affiché dans le terminal avec &lt;code&gt;write()&lt;/code&gt;. La commande &lt;code&gt;cat&lt;/code&gt; est très simple dans son fonctionnement, mais elle est incroyablement utile pour voir le contenu des fichiers texte.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Voici l&amp;rsquo;explication de la commande &lt;code&gt;cat&lt;/code&gt; :&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/explication-cat.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Explication de la commande cat&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Crédit image :&lt;/em&gt; &lt;a class=&#34;link&#34; href=&#34;https://explainshell.com/explain?cmd=cat&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ExplainShell&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;exemple-dutilisation-de-cat-&#34;&gt;Exemple d&amp;rsquo;utilisation de &lt;code&gt;cat&lt;/code&gt; :
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Afficher le contenu d&amp;#39;un fichier&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat mon_fichier.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Concaténer et afficher le contenu de plusieurs fichiers&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat fichier1.txt fichier2.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Créer un nouveau fichier avec du contenu&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &amp;gt; nouveau_fichier.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Ceci est le contenu du nouveau fichier.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Ctrl+D pour terminer&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Ajouter du contenu à la fin d&amp;#39;un fichier existant&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &amp;gt;&amp;gt; fichier_existant.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Ajout de nouveau contenu.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Ctrl+D pour terminer&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;5-la-commande-mkdir&#34;&gt;5. La commande &lt;code&gt;mkdir&lt;/code&gt;
&lt;/h2&gt;&lt;p&gt;La commande &lt;code&gt;mkdir&lt;/code&gt; permet de créer un nouveau répertoire.&lt;/p&gt;
&lt;h3 id=&#34;ce-que-fait-réellement-la-commande-mkdir-&#34;&gt;Ce que fait réellement la commande &lt;code&gt;mkdir&lt;/code&gt; :
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Créer un nouveau répertoire&lt;/strong&gt; : &lt;code&gt;mkdir&lt;/code&gt; crée un nouveau dossier dans le système de fichiers avec l&amp;rsquo;appel système &lt;code&gt;mkdir()&lt;/code&gt;. Cela signifie qu&amp;rsquo;un nouvel inode (structure de données représentant le répertoire) est créé et associé à son emplacement dans le système de fichiers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Voici l&amp;rsquo;explication de la commande &lt;code&gt;mkdir&lt;/code&gt; :&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/explication-mkdir.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Explication de la commande mkdir&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Crédit image :&lt;/em&gt; &lt;a class=&#34;link&#34; href=&#34;https://explainshell.com/explain?cmd=mkdir&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ExplainShell&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;exemple-dutilisation-de-mkdir-&#34;&gt;Exemple d&amp;rsquo;utilisation de &lt;code&gt;mkdir&lt;/code&gt; :
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Créer un nouveau répertoire&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir nouveau_repertoire
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Créer plusieurs répertoires à la fois&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir dossier1 dossier2 dossier3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Créer une structure de répertoires imbriqués&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -p parent/enfant/petit-enfant
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Créer un répertoire avec des permissions spécifiques&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -m &lt;span style=&#34;color:#ae81ff&#34;&gt;755&lt;/span&gt; repertoire_avec_permissions
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;6-la-commande-rm&#34;&gt;6. La commande &lt;code&gt;rm&lt;/code&gt;
&lt;/h2&gt;&lt;p&gt;La commande &lt;code&gt;rm&lt;/code&gt; permet de supprimer des fichiers ou répertoires.&lt;/p&gt;
&lt;h3 id=&#34;ce-que-fait-réellement-la-commande-rm-&#34;&gt;Ce que fait réellement la commande &lt;code&gt;rm&lt;/code&gt; :
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Supprimer un fichier&lt;/strong&gt; : &lt;code&gt;rm&lt;/code&gt; utilise l&amp;rsquo;appel système &lt;code&gt;unlink()&lt;/code&gt; pour retirer le fichier de son répertoire. Si le fichier est un lien vers des données sur le disque, ces données ne seront supprimées que lorsque plus aucun lien n&amp;rsquo;y fait référence.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Supprimer un répertoire&lt;/strong&gt; : Lorsque vous utilisez &lt;code&gt;rm -r&lt;/code&gt; pour supprimer un répertoire, &lt;code&gt;rm&lt;/code&gt; va de manière récursive appeler &lt;code&gt;unlink()&lt;/code&gt; sur chaque fichier et sous-répertoire pour s&amp;rsquo;assurer que tout le contenu est supprimé.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Voici l&amp;rsquo;explication de la commande &lt;code&gt;rm&lt;/code&gt; :&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/posts/les-commandes-de-base-sous-linux-ce-qui-se-passe-sous-le-capot/expliquation-rm.png&#34;
	width=&#34;1078&#34;
	height=&#34;502&#34;
	srcset=&#34;http://localhost:1313/posts/les-commandes-de-base-sous-linux-ce-qui-se-passe-sous-le-capot/expliquation-rm_hu6146377369096703528.png 480w, http://localhost:1313/posts/les-commandes-de-base-sous-linux-ce-qui-se-passe-sous-le-capot/expliquation-rm_hu12354673721695259098.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Explication de la commande rm&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;214&#34;
		data-flex-basis=&#34;515px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Crédit image :&lt;/em&gt; &lt;a class=&#34;link&#34; href=&#34;https://explainshell.com/explain?cmd=rm&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ExplainShell&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;exemple-dutilisation-de-rm-&#34;&gt;Exemple d&amp;rsquo;utilisation de &lt;code&gt;rm&lt;/code&gt; :
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Supprimer un fichier&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm fichier_a_supprimer.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Supprimer plusieurs fichiers&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm fichier1.txt fichier2.txt fichier3.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Supprimer un répertoire vide&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rmdir repertoire_vide
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Supprimer un répertoire et son contenu (attention, utiliser avec précaution)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -r repertoire_et_contenu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Supprimer un fichier en demandant confirmation&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -i fichier_important.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Forcer la suppression sans demander de confirmation (à utiliser avec extrême prudence)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -f fichier_protege.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;Ces commandes de base ne sont plus un mystère pour vous, et j&amp;rsquo;espère que cette petite excursion dans les entrailles de Linux vous a rassurés. La ligne de commande n&amp;rsquo;est finalement pas si intimidante, n&amp;rsquo;est-ce pas ? Avec un peu de pratique (et d&amp;rsquo;humour 😄), vous verrez que même le shell peut devenir votre meilleur ami.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Crédits&lt;/strong&gt; :&lt;br&gt;
Certaines explications visuelles des commandes ont été fournies par &lt;a class=&#34;link&#34; href=&#34;https://explainshell.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ExplainShell&lt;/a&gt;.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>De la Crise à la Transition : Mon Chemin du Développement à l&#39;Ops</title>
        <link>http://localhost:1313/posts/du-dev-a-ops/</link>
        <pubDate>Wed, 25 Sep 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/posts/du-dev-a-ops/</guid>
        <description>&lt;h1 id=&#34;de-la-crise-à-la-transition--mon-chemin-du-développement-à-lops&#34;&gt;De la Crise à la Transition : Mon Chemin du Développement à l&amp;rsquo;Ops
&lt;/h1&gt;&lt;h2 id=&#34;introduction&#34;&gt;Introduction
&lt;/h2&gt;&lt;p&gt;Mon parcours vers le monde de l&amp;rsquo;Ops n’a pas été simple, marqué par la pandémie de Covid-19 et des défis de santé. J’ai commencé ma carrière en développement pour une raison bien précise, mais la maladie et les aléas de la vie ont souvent mis mes projets en pause. Malgré tout, j’ai persévéré et découvert une passion pour l’administration des systèmes et des infrastructures. Voici mon histoire, du développement à l’Ops, où chaque obstacle m’a permis de grandir.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;1-pourquoi-jai-voulu-faire-du-développement&#34;&gt;1. Pourquoi J’ai Voulu Faire du Développement
&lt;/h2&gt;&lt;p&gt;Ma motivation pour me lancer dans le développement est venue d’une expérience personnelle marquante. Ma femme est également épileptique. Un jour, elle a fait une crise sévère qui l’a conduite aux urgences. Par la suite, nous avons découvert que sa neurologue, dont le bureau était littéralement à côté des urgences, n&amp;rsquo;avait jamais été informée de cette visite.&lt;/p&gt;
&lt;p&gt;Face à ce manque de communication entre les services de santé, j&amp;rsquo;ai eu l’idée de créer un &lt;strong&gt;bracelet connecté&lt;/strong&gt; et un &lt;strong&gt;site web&lt;/strong&gt; pour aider les personnes dans le même cas. L’idée était de permettre aux médecins et aux proches d’être informés en temps réel des crises et des hospitalisations. Cependant, en faisant des recherches, nous avons découvert que des solutions similaires existaient déjà et que la technologie du bracelet n’était pas encore assez avancée pour fonctionner comme nous l’imaginions.&lt;/p&gt;
&lt;p&gt;Cette idée m’a toutefois donné l&amp;rsquo;envie de m&amp;rsquo;orienter vers le &lt;strong&gt;développement&lt;/strong&gt;, car je voyais le potentiel de la technologie pour aider les autres. Même si ce projet particulier n’a pas abouti, il a été le catalyseur de ma reconversion.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-le-début--se-lancer-dans-le-développement-en-2020&#34;&gt;2. Le Début : Se Lancer dans le Développement en 2020
&lt;/h2&gt;&lt;p&gt;En 2020, j’ai décidé de me lancer dans le développement. Avec la pandémie de Covid-19 qui arrivait, tout a été bouleversé. Chaque formation que j’entreprenais était interrompue, et ma santé en a aussi souffert. En tant qu’&lt;strong&gt;épileptique&lt;/strong&gt;, mes crises se sont aggravées sous le stress de la situation, et je devais souvent interrompre mes projets pour prendre soin de moi. La Covid-19 a directement impacté ma santé, déclenchant des crises alors que j&amp;rsquo;étais auparavant stable.&lt;/p&gt;
&lt;p&gt;Malgré ces épreuves, je n’ai jamais cessé de me relever et de m’investir dans mes projets. C’est dans ces moments que j’ai compris la valeur de la persévérance, surtout dans le domaine de l’IT, où les compétences s&amp;rsquo;acquièrent au fil du temps.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;3-retour-à-la-tech-info-après-le-cesi&#34;&gt;3. Retour à la Tech Info après le CESI
&lt;/h2&gt;&lt;p&gt;Après avoir commencé une formation en &lt;strong&gt;GMSI&lt;/strong&gt; au &lt;strong&gt;CESI&lt;/strong&gt;, je me suis tourné vers la &lt;strong&gt;tech info&lt;/strong&gt;, un domaine qui m’a toujours passionné. Durant cette période, j&amp;rsquo;ai eu l&amp;rsquo;occasion de faire de l&amp;rsquo;&lt;strong&gt;administration système Linux&lt;/strong&gt; dans le cadre de mon entreprise, ce qui a marqué un tournant dans mon parcours.&lt;/p&gt;
&lt;p&gt;C’est également à ce moment que j&amp;rsquo;ai découvert &lt;strong&gt;Linux&lt;/strong&gt; et &lt;strong&gt;Docker&lt;/strong&gt;, des outils qui ont renforcé mon intérêt pour le monde des systèmes et infrastructures. Malheureusement, je n&amp;rsquo;ai pas pu terminer cette formation à cause des interruptions liées à la Covid et à l’épilepsie. L’école en ligne que j&amp;rsquo;avais choisie n’avait plus de place dans le programme tech info, et j’ai été orienté vers le &lt;strong&gt;front-end&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Plutôt que de voir cela comme un échec, j’ai pris cette opportunité comme un moyen d&amp;rsquo;élargir mes compétences. Le &lt;strong&gt;CSS&lt;/strong&gt; est rapidement devenu mon cauchemar (comme pour beaucoup de développeurs, haha), mais j’ai appris à en tirer le meilleur parti. Au lieu de rester bloqué, j’ai vu cela comme une nouvelle corde à mon arc, une compétence supplémentaire qui pourrait m’être utile plus tard.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;4-surmonter-la-maladie-et-continuer-à-avancer&#34;&gt;4. Surmonter la Maladie et Continuer à Avancer
&lt;/h2&gt;&lt;p&gt;Malgré les crises d’épilepsie qui revenaient régulièrement, j’ai continué à avancer, lentement mais sûrement. Il y a eu des moments où je me suis demandé si je pourrais vraiment continuer dans ce domaine, mais à chaque épreuve, je prenais le temps de me ressaisir.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;La résilience&lt;/strong&gt; est devenue le mot clé de mon parcours. Ces moments de pause forcée m&amp;rsquo;ont permis de réfléchir et de me recentrer sur mes véritables objectifs. Je savais que je voulais aller plus loin, et j’étais prêt à affronter les défis, même ceux liés à ma santé.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;5-transition-vers-lops--découverte-dune-nouvelle-passion&#34;&gt;5. Transition vers l&amp;rsquo;Ops : Découverte d&amp;rsquo;une Nouvelle Passion
&lt;/h2&gt;&lt;p&gt;Après mes expériences en développement, j’ai finalement pris la décision de me reconvertir vers l&amp;rsquo;Ops. C’est dans ce domaine que j’ai découvert des outils comme &lt;strong&gt;Linux&lt;/strong&gt; et &lt;strong&gt;Docker&lt;/strong&gt;, qui m&amp;rsquo;ont ouvert de nouvelles perspectives. Travailler avec ces technologies m’a montré à quel point l&amp;rsquo;infrastructure et les systèmes sont essentiels pour que tout fonctionne correctement.&lt;/p&gt;
&lt;p&gt;Mon expérience en front-end, bien que pas directement liée, m’a aidé à mieux comprendre les besoins des développeurs, et comment les infrastructures peuvent soutenir leur travail.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt; m’a permis de découvrir la puissance du terminal et de l’administration système. Ce système est un incontournable dans le monde de l&amp;rsquo;Ops, et plus je l&amp;rsquo;utilise, plus je comprends pourquoi il est si largement adopté.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt; m’a ouvert la voie vers la &lt;strong&gt;conteneurisation&lt;/strong&gt;, une technologie clé pour déployer et gérer des applications de manière flexible et évolutive.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Je n’ai pas encore exploré des outils comme &lt;strong&gt;Ansible&lt;/strong&gt; ou &lt;strong&gt;Kubernetes&lt;/strong&gt;, mais ils sont sur ma feuille de route, car je sais qu’ils jouent un rôle important dans l&amp;rsquo;automatisation et l’orchestration des infrastructures modernes.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;6-pourquoi-je-ne-regrette-pas-ma-reconversion&#34;&gt;6. Pourquoi Je Ne Regrette Pas Ma Reconversion
&lt;/h2&gt;&lt;p&gt;Aujourd’hui, je regarde en arrière avec un sentiment de fierté. Malgré la &lt;strong&gt;maladie&lt;/strong&gt;, les &lt;strong&gt;crises d’épilepsie&lt;/strong&gt;, et les obstacles liés à la Covid-19, j’ai persévéré. Mon passage du &lt;strong&gt;développement&lt;/strong&gt; à l’&lt;strong&gt;Ops&lt;/strong&gt; m’a permis de découvrir une nouvelle passion, où je peux véritablement m&amp;rsquo;épanouir.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;La résilience&lt;/strong&gt; a été la clé de ma réussite. Elle m’a permis de ne jamais abandonner, même lorsque les circonstances étaient difficiles.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;L&amp;rsquo;apprentissage continu&lt;/strong&gt; est ce qui m’a permis d’avancer. Chaque compétence, chaque défi a été une opportunité d’apprendre et de me perfectionner.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;L&amp;rsquo;administration système et la conteneurisation&lt;/strong&gt; sont des domaines qui me passionnent, et je sais qu’il y a encore beaucoup à apprendre. Mais je suis prêt à relever ces nouveaux défis.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;Mon parcours de reconversion du &lt;strong&gt;dev à l’Ops&lt;/strong&gt; a été un voyage semé d’embûches, mais chaque obstacle a renforcé ma détermination. Que ce soit les crises d&amp;rsquo;épilepsie, les interruptions de formations dues à la pandémie, ou les changements de direction imprévus, j’ai appris à accepter ces défis et à les transformer en forces.&lt;/p&gt;
&lt;p&gt;Si tu envisages une reconversion ou fais face à des obstacles similaires, sache que tout est possible avec de la persévérance. Le domaine de l’IT est en constante évolution, et chaque compétence acquise, chaque obstacle surmonté, te rapproche de la réussite.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
